:markdown-it
  ## Intro

  This project is an example implementation addressing some of principles behind the SCS architecture and front-end integration.
  This project provides different service implementations (merely stubs without actual persistence implementation)
  that integrate in different scenarios appropriate for each specific problem domain.

  For further information about the general topic of SCS and front-end integration you may want to take a look at

  - [scs-architecture.com](http://www.scs-architecture.com)
  - [frond-end integration and SCS - 01](https://www.innoq.com/de/podcast/025-scs-frontend-integration/) (german)
  - [frond-end integration and SCS - 02](https://www.innoq.com/de/podcast/026-scs-frontend-integration-teil-2/) (german)

  This service landscape, which aims to build an easy and simple to use ecommerce system involves a couple of systems/services:

  - [order](https://github.com/scs-commerce/order)

    An order service, that at the moment just offers the possibility to add articles to a shopping basket.

  - [product lists](https://github.com/scs-commerce/products)

    A list of generated products (just name and fake descriptions for now)

  - [landing page](https://github.com/scs-commerce/landing-page)

    A landing page, that combines its own static content with the content provided by the other services.

    In detail that means, that a list of products out of the products service is embedded, that is loaded page, by page,
    by scrolling down to the bottom of the page.

    Furthermore there a view to the shopping basket service is injected at the top of the landing page,
    that can be updated by marking articles at the product list.

  - [assets](https://github.com/scs-commerce/assets)

    A centralized asset library, that contains central js and CSS components available to all domains.
    We load [bootstap](http://getbootstrap.com/) CSS in beforehand so that it builds the base of our asset library.

  Accompanying to the service repositories, an [integration](https://github.com/scs-commerce/integration) repository is available, that contains a configuration and a docker setup for
  running an nginx web server, that serves as application server as well as caching proxy.

  ![architectural overview](/images/overview.png)
